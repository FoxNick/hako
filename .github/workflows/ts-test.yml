name: Test TypeScript Embedder with Source Packaging
on:
  push:
    branches: [main, vnext]
  pull_request:
    branches: [main, vnext]

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      # ------------ 基础环境配置 ------------
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0  # 获取完整提交历史（便于补丁应用）

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.14.0"
          registry-url: "https://registry.npmjs.org"

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: "1.2.9"

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@802fa1a2c4e212495c05bf94dba2704a92a472be
        with:
          cmake-version: "4.0.x"

      # ------------ 应用补丁 ------------
      - name: Envsetup
        run: chmod +x tools/envsetup.sh && tools/envsetup.sh

      - name: Apply patches
        run: chmod +x tools/patch.sh && tools/patch.sh

      - name: Upload primjs
        uses: actions/upload-artifact@v4
        with:
          name: primjs
          path: /home/runner/work/hako/hako/primjs
      
      # ------------ TypeScript 项目流程 ------------
      - name: Install dependencies (TS)
        working-directory: embedders/ts
        run: |
          rm -rf package-lock.json  # 规避 npm 已知问题
          npm i

      - name: Generate builds (TS)
        working-directory: embedders/ts
        run: bun generate:builds
        
      - name: Upload embedders
        uses: actions/upload-artifact@v4
        with:
          name: embedders
          path: /home/runner/work/hako/hako/embedders
      
      - name: Generate version (TS)
        working-directory: embedders/ts
        run: bun generate:version

      - name: Test (TS)
        working-directory: embedders/ts
        run: bun test

      - name: Build (TS)
        working-directory: embedders/ts
        run: bun run build
