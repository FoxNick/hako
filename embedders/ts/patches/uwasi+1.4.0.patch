diff --git a/node_modules/uwasi/lib/esm/features/random.js b/node_modules/uwasi/lib/esm/features/random.js
index 0cf5a36..b6e17e6 100644
--- a/node_modules/uwasi/lib/esm/features/random.js
+++ b/node_modules/uwasi/lib/esm/features/random.js
@@ -1,10 +1,10 @@
 import { WASIAbi } from "../abi.js";
-import { defaultRandomFillSync } from "../platforms/crypto.js";
+
 /**
  * Create a feature provider that provides `random_get` with `crypto` APIs as backend by default.
  */
 export function useRandom(useOptions = {}) {
-    const randomFillSync = useOptions.randomFillSync || defaultRandomFillSync;
+    const randomFillSync = useOptions.randomFillSync || crypto.getRandomValues;
     return (options, abi, memoryView) => {
         return {
             random_get: (bufferOffset, length) => {
diff --git a/node_modules/uwasi/lib/esm/index.js b/node_modules/uwasi/lib/esm/index.js
index 7f34757..9c844fc 100644
--- a/node_modules/uwasi/lib/esm/index.js
+++ b/node_modules/uwasi/lib/esm/index.js
@@ -20,10 +20,6 @@ export class WASI {
                 const featureName = useFeature.name || "Unknown feature";
                 const imports = useFeature(options, abi, this.view.bind(this));
                 for (const key in imports) {
-                    if (key in this.wasiImport) {
-                        const previousProvider = importProviders[key] || "Unknown feature";
-                        throw new Error(`Import conflict: Function '${key}' is already provided by '${previousProvider}' and is being redefined by '${featureName}'`);
-                    }
                     importProviders[key] = featureName;
                 }
                 this.wasiImport = Object.assign(Object.assign({}, this.wasiImport), imports);
diff --git a/node_modules/uwasi/lib/esm/platforms/crypto.browser.js b/node_modules/uwasi/lib/esm/platforms/crypto.browser.js
deleted file mode 100644
index 18d960a..0000000
--- a/node_modules/uwasi/lib/esm/platforms/crypto.browser.js
+++ /dev/null
@@ -1,3 +0,0 @@
-export const defaultRandomFillSync = (buffer) => {
-    crypto.getRandomValues(buffer);
-};
diff --git a/node_modules/uwasi/lib/esm/platforms/crypto.js b/node_modules/uwasi/lib/esm/platforms/crypto.js
deleted file mode 100644
index 298ab30..0000000
--- a/node_modules/uwasi/lib/esm/platforms/crypto.js
+++ /dev/null
@@ -1,4 +0,0 @@
-import * as crypto from "crypto";
-export const defaultRandomFillSync = (buffer) => {
-    crypto.randomFillSync(buffer);
-};
diff --git a/node_modules/uwasi/package.json b/node_modules/uwasi/package.json
index 7465e49..2eef04c 100644
--- a/node_modules/uwasi/package.json
+++ b/node_modules/uwasi/package.json
@@ -2,10 +2,11 @@
   "name": "uwasi",
   "version": "1.4.0",
   "description": "Micro modularized WASI runtime for JavaScript",
-  "main": "lib/cjs/index.js",
-  "module": "lib/esm/index.js",
-  "browser": {
-    "./lib/esm/platforms/crypto.js": "./lib/esm/platforms/crypto.browser.js"
+  "exports": {
+    ".": {
+      "import": "./lib/esm/index.js",
+      "require": "./lib/cjs/index.js"
+    }
   },
   "scripts": {
     "build": "tsc -p tsconfig.esm.json && tsc -p tsconfig.cjs.json && echo '{ \"type\": \"module\" }' > lib/esm/package.json",
